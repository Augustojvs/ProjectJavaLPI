/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Utilitarios.Conexao;
import Utilitarios.Tabela;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Augusto
 */
public class FrmProduto extends javax.swing.JFrame {

    Conexao conexao = new Conexao();
    private String usuario;
    

    public FrmProduto(String user) {
        initComponents();
        conexao.Conectar();
        this.usuario = user;
        //this.u = u;
        preencherTabela("SELECT * FROM produto ORDER BY cod_produto");
        preencherCombo();

    }

    private FrmProduto() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        btAdicionar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtTabela = new javax.swing.JTable();
        btPrimeiro = new javax.swing.JButton();
        btUltimo = new javax.swing.JButton();
        btAnterior = new javax.swing.JButton();
        btProximo = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtCompra = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtComboFornecedor = new javax.swing.JComboBox<>();
        btAddFornecedor = new javax.swing.JButton();
        txtPesquisa = new javax.swing.JTextField();
        btPesquisa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de produtos");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Codigo:");

        jLabel3.setText("Nome:");

        jLabel4.setText("Valor de Venda:");

        jLabel5.setText("Descrição:");

        txtNome.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNome.setEnabled(false);

        txtCodigo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtCodigo.setEnabled(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        txtValor.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtValor.setEnabled(false);

        txtDescricao.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDescricao.setEnabled(false);

        btAdicionar.setText("Adicionar");
        btAdicionar.setToolTipText("utilize para adicionar um produto");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("utiliza para salvar um produto");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btAlterar.setText("Alterar");
        btAlterar.setToolTipText("utilize para alterar um dado selecionado");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.setToolTipText("Utilize através do codigo de produto");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.setToolTipText("utilize para cancelar uma operação");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        txtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        txtTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTabelaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(txtTabela);

        btPrimeiro.setText("Primeiro");
        btPrimeiro.setToolTipText("mostra o primeiro dado armazenado");
        btPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPrimeiroActionPerformed(evt);
            }
        });

        btUltimo.setText("Ultimo");
        btUltimo.setToolTipText("mostra o ultimo dado armazenado");
        btUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUltimoActionPerformed(evt);
            }
        });

        btAnterior.setText("Anterior");
        btAnterior.setToolTipText("mostra o dado anterior");
        btAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnteriorActionPerformed(evt);
            }
        });

        btProximo.setText("Proximo");
        btProximo.setToolTipText("mostra o proximo dado");
        btProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProximoActionPerformed(evt);
            }
        });

        btVoltar.setBackground(new java.awt.Color(255, 255, 255));
        btVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icon_voltar.png"))); // NOI18N
        btVoltar.setToolTipText("clique para voltar a janela anterior");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        jLabel6.setText("Valor de Compra:");

        txtCompra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtCompra.setEnabled(false);

        jLabel7.setText("Quantidade:");

        txtQuantidade.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtQuantidade.setEnabled(false);

        jLabel8.setText("Fornecedor:");

        txtComboFornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btAddFornecedor.setText("+");
        btAddFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddFornecedorActionPerformed(evt);
            }
        });

        btPesquisa.setText("Pesquisar");
        btPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btPesquisa))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(30, 30, 30)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtComboFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btAddFornecedor))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addContainerGap(96, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btCancelar)
                        .addGap(22, 22, 22))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(btPrimeiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btUltimo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAnterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btProximo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btPesquisa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtComboFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAddFornecedor))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdicionar)
                    .addComponent(btSalvar)
                    .addComponent(btAlterar)
                    .addComponent(btExcluir)
                    .addComponent(btCancelar))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPrimeiro)
                    .addComponent(btUltimo)
                    .addComponent(btAnterior)
                    .addComponent(btProximo))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Formulario de cadastro de produtos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(169, 169, 169))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(616, 558));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed

        try {
            PreparedStatement pst = conexao.conn.prepareStatement("INSERT INTO produto (nome, valor_venda, descricao, valor_compra, quantidade, fornecedor) VALUES (?, ?, ?, ?, ?, ? )");

            pst.setString(1, txtNome.getText());
            pst.setString(2, txtValor.getText());
            pst.setString(3, txtDescricao.getText());
            pst.setString(4, txtCompra.getText());
            pst.setString(5, txtQuantidade.getText());
            pst.setString(6, txtComboFornecedor.getSelectedItem().toString());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Produto inserido com sucesso!");
            preencherTabela("SELECT * FROM produto ORDER BY cod_produto");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "erro na inserção! \n ERRO: " + ex);
        }
        btExcluir.setEnabled(true);
        txtCodigo.setEnabled(true);
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        try {

            PreparedStatement pst = conexao.conn.prepareStatement("UPDATE produto SET nome = ?, valor_venda = ?, descricao = ?, valor_compra = ?, quantidade = ?, fornecedor = ? WHERE cod_produto = ?");
            pst.setString(1, txtNome.getText());
            pst.setString(2, txtValor.getText());
            pst.setString(3, txtDescricao.getText());
            pst.setString(4, txtCompra.getText());
            pst.setString(5, txtQuantidade.getText());
            pst.setString(6, txtComboFornecedor.getSelectedItem().toString());
            pst.setInt(7, Integer.parseInt(txtCodigo.getText()));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Produto alterado com sucesso!");
            preencherTabela("SELECT * FROM produto ORDER BY cod_produto");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "erro na alteração! \n ERRO: " + ex);

        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        if (txtCodigo.isEnabled() == false) {

            txtCodigo.setEnabled(true);
        } else {
            if (txtCodigo.getText().equalsIgnoreCase("") == false) {
                try {

                    PreparedStatement pst = conexao.conn.prepareStatement("DELETE FROM produto WHERE cod_produto = ?");
                    pst.setInt(1, Integer.parseInt(txtCodigo.getText()));
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Produto excluido com sucesso!");
                    preencherTabela("SELECT * FROM produto ORDER BY cod_produto");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "erro na exclusão! \n ERRO: " + ex);

                }
                txtNome.setText("");
                txtCodigo.setText("");
                txtValor.setText("");
                txtDescricao.setText("");
                txtCompra.setText("");
                txtQuantidade.setText("");
                txtCodigo.setEnabled(false);

            } else {
                txtCodigo.setEnabled(false);
                JOptionPane.showMessageDialog(rootPane, "ERRO:\nCampo não pode ser nulo!");
            }
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        txtNome.setText("");
        txtCodigo.setText("");
        txtValor.setText("");
        txtDescricao.setText("");
        txtCompra.setText("");
        txtQuantidade.setText("");
        txtNome.setEnabled(true);
        txtCodigo.setEnabled(false);
        txtValor.setEnabled(true);
        txtDescricao.setEnabled(true);
        txtCompra.setEnabled(true);
        txtQuantidade.setEnabled(true);
        btExcluir.setEnabled(false);

    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        txtNome.setText("");
        txtCodigo.setText("");
        txtValor.setText("");
        txtDescricao.setText("");
        txtCompra.setText("");
        txtQuantidade.setText("");
        txtNome.setEnabled(false);
        txtCodigo.setEnabled(false);
        txtValor.setEnabled(false);
        txtDescricao.setEnabled(false);
        txtCompra.setEnabled(false);
        txtQuantidade.setEnabled(false);
        btAdicionar.setEnabled(true);
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPrimeiroActionPerformed
        txtNome.setEnabled(true);
        txtCodigo.setEnabled(false);
        txtValor.setEnabled(true);
        txtDescricao.setEnabled(true);
        txtCompra.setEnabled(true);
        txtQuantidade.setEnabled(true);
        try {
            conexao.executaSQL("SELECT * FROM produto");
            conexao.rs.first();
            txtCodigo.setText(conexao.rs.getString("cod_produto"));
            txtNome.setText(conexao.rs.getString("nome"));
            txtValor.setText(conexao.rs.getString("valor_venda"));
            txtDescricao.setText(conexao.rs.getString("descricao"));
            txtCompra.setText(conexao.rs.getString("valor_compra"));
            txtQuantidade.setText(conexao.rs.getString("quantidade"));
            txtComboFornecedor.setSelectedItem(conexao.rs.getString("fornecedor"));
            btUltimo.setEnabled(true);
            btProximo.setEnabled(true);
            btPrimeiro.setEnabled(false);
            btAnterior.setEnabled(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao exibir dados!\nERRO: " + ex);
        }
    }//GEN-LAST:event_btPrimeiroActionPerformed

    private void btUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUltimoActionPerformed
        txtNome.setEnabled(true);
        txtCodigo.setEnabled(false);
        txtValor.setEnabled(true);
        txtDescricao.setEnabled(true);
        txtCompra.setEnabled(true);
        txtQuantidade.setEnabled(true);
        try {
            conexao.executaSQL("SELECT * FROM produto");
            conexao.rs.last();
            txtCodigo.setText(conexao.rs.getString("cod_produto"));
            txtNome.setText(conexao.rs.getString("nome"));
            txtValor.setText(conexao.rs.getString("valor_venda"));
            txtDescricao.setText(conexao.rs.getString("descricao"));
            txtCompra.setText(conexao.rs.getString("valor_compra"));
            txtQuantidade.setText(conexao.rs.getString("quantidade"));
            txtComboFornecedor.setSelectedItem(conexao.rs.getString("fornecedor"));
            btUltimo.setEnabled(false);
            btProximo.setEnabled(false);
            btPrimeiro.setEnabled(true);
            btAnterior.setEnabled(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao exibir dados!\nERRO: " + ex);
        }


    }//GEN-LAST:event_btUltimoActionPerformed

    private void btAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnteriorActionPerformed
        txtNome.setEnabled(true);
        txtCodigo.setEnabled(false);
        txtValor.setEnabled(true);
        txtDescricao.setEnabled(true);
        txtCompra.setEnabled(true);
        txtQuantidade.setEnabled(true);
        try {

            conexao.rs.previous();
            txtCodigo.setText(conexao.rs.getString("cod_produto"));
            txtNome.setText(conexao.rs.getString("nome"));
            txtValor.setText(conexao.rs.getString("valor_venda"));
            txtDescricao.setText(conexao.rs.getString("descricao"));
            txtCompra.setText(conexao.rs.getString("valor_compra"));
            txtQuantidade.setText(conexao.rs.getString("quantidade"));
            txtComboFornecedor.setSelectedItem(conexao.rs.getString("fornecedor"));
            btUltimo.setEnabled(true);
            btProximo.setEnabled(true);
            btPrimeiro.setEnabled(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "este e o primeiro dado da tabela!");
        }

    }//GEN-LAST:event_btAnteriorActionPerformed

    private void btProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProximoActionPerformed
        txtNome.setEnabled(true);
        txtCodigo.setEnabled(false);
        txtValor.setEnabled(true);
        txtDescricao.setEnabled(true);
        txtCompra.setEnabled(true);
        txtQuantidade.setEnabled(true);
        try {

            conexao.rs.next();
            txtCodigo.setText(conexao.rs.getString("cod_produto"));
            txtNome.setText(conexao.rs.getString("nome"));
            txtValor.setText(conexao.rs.getString("valor_venda"));
            txtDescricao.setText(conexao.rs.getString("descricao"));
            txtCompra.setText(conexao.rs.getString("valor_compra"));
            txtQuantidade.setText(conexao.rs.getString("quantidade"));
            txtComboFornecedor.setSelectedItem(conexao.rs.getString("fornecedor"));
            btUltimo.setEnabled(true);
            btProximo.setEnabled(true);
            btPrimeiro.setEnabled(true);
            btAnterior.setEnabled(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "este e o ultimo dado a ser exibido!");
        }
    }//GEN-LAST:event_btProximoActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void btAddFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddFornecedorActionPerformed
        try {
            conexao.executaSQL("SELECT * FROM login WHERE usuario='" + this.usuario + "'");
            conexao.rs.first();
            if (conexao.rs.getString("permissao").equals("Administrador")) {
                FrmFornecedor frm = new FrmFornecedor();
                frm.setVisible(true);
                preencherCombo();
            } else {
                JOptionPane.showMessageDialog(null, "Você não possui permissao para acessar esse menu");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Você não possui permissao para acessar esse menu");
        }

//        if(u.getPermissao().equals("Administrador")){
//            FrmFornecedor frm = new FrmFornecedor();
//                frm.setVisible(true);
//                preencherCombo();
//            } else {
//                JOptionPane.showMessageDialog(null, "Você não possui permissao para acessar esse menu");
//            }
    }//GEN-LAST:event_btAddFornecedorActionPerformed

    private void txtTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTabelaMouseClicked
        String cod_produto = "" + txtTabela.getValueAt(txtTabela.getSelectedRow(), 0);
        conexao.Conectar();
        // conexaoP.Conectar();
        conexao.executaSQL("SELECT * FROM produto WHERE cod_produto = '" + cod_produto + "'");
        try {
            conexao.rs.first();
            txtCodigo.setText(conexao.rs.getString("cod_produto"));
            txtNome.setText(conexao.rs.getString("nome"));
            txtValor.setText(conexao.rs.getString("valor_venda"));
            txtDescricao.setText(conexao.rs.getString("descricao"));
            txtCompra.setText(conexao.rs.getString("valor_compra"));
            txtQuantidade.setText(conexao.rs.getString("quantidade"));
            //conexaoP.executaSQL("SELECT * FROM fornecedor WHERE cod_fornecedor =" + conexao.rs.getString("fornecedor"));
            // conexaoP.rs.first();
            txtComboFornecedor.setSelectedItem(conexao.rs.getString("fornecedor"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Produto não cadastrado!\nERRO:" + ex);
        }
    }//GEN-LAST:event_txtTabelaMouseClicked

    private void btPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaActionPerformed
        conexao.Conectar();
        conexao.executaSQL("SELECT * FROM produto WHERE nome LIKE '%" + txtPesquisa.getText() + "%'");
        try {
            conexao.rs.first();
            txtCodigo.setText(conexao.rs.getString("cod_produto"));
            txtNome.setText(conexao.rs.getString("nome"));
            txtValor.setText(conexao.rs.getString("valor_venda"));
            txtDescricao.setText(conexao.rs.getString("descricao"));
            txtCompra.setText(conexao.rs.getString("valor_compra"));
            txtQuantidade.setText(conexao.rs.getString("quantidade"));
            txtComboFornecedor.setSelectedItem(conexao.rs.getString("fornecedor"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao pesquisar dados!\nERRO:" + ex);
        }

    }//GEN-LAST:event_btPesquisaActionPerformed
    public void preencherCombo() {
        conexao.executaSQL("SELECT * FROM fornecedor ORDER BY cod_fornecedor");
        txtComboFornecedor.removeAllItems();
        try {
            conexao.rs.first();
            do {
                txtComboFornecedor.addItem(conexao.rs.getString("nome_empresa"));
            } while (conexao.rs.next());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher combobox! \n ERRO: " + ex);
        }
    }

    public void preencherTabela(String SQL) {
        ArrayList dados = new ArrayList();

        String[] Colunas = new String[]{"Codigo", "Nome", "Valor V", "Descrição", "Valor C", "Quantidade", "Fornecedor"};

        conexao.executaSQL(SQL);
        try {
            conexao.rs.first();
            do {
                dados.add(new Object[]{conexao.rs.getInt("cod_produto"), conexao.rs.getString("nome"), conexao.rs.getString("valor_venda"), conexao.rs.getString("descricao"), conexao.rs.getString("valor_compra"), conexao.rs.getString("quantidade"), conexao.rs.getString("fornecedor")});
            } while (conexao.rs.next());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher o ArrayList!\nERRO: " + ex);
        }
        Tabela modelo = new Tabela(dados, Colunas);
        txtTabela.setModel(modelo);
        txtTabela.getColumnModel().getColumn(0).setPreferredWidth(50);
        txtTabela.getColumnModel().getColumn(0).setResizable(false);
        txtTabela.getColumnModel().getColumn(1).setPreferredWidth(100);
        txtTabela.getColumnModel().getColumn(1).setResizable(false);
        txtTabela.getColumnModel().getColumn(2).setPreferredWidth(60);
        txtTabela.getColumnModel().getColumn(2).setResizable(false);
        txtTabela.getColumnModel().getColumn(3).setPreferredWidth(150);
        txtTabela.getColumnModel().getColumn(3).setResizable(false);
        txtTabela.getColumnModel().getColumn(4).setPreferredWidth(60);
        txtTabela.getColumnModel().getColumn(4).setResizable(false);
        txtTabela.getColumnModel().getColumn(5).setPreferredWidth(75);
        txtTabela.getColumnModel().getColumn(5).setResizable(false);
        txtTabela.getColumnModel().getColumn(6).setPreferredWidth(80);
        txtTabela.getColumnModel().getColumn(6).setResizable(false);
        txtTabela.getTableHeader().setReorderingAllowed(false);
        txtTabela.setAutoResizeMode(txtTabela.AUTO_RESIZE_OFF);
        txtTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddFornecedor;
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btAnterior;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btPesquisa;
    private javax.swing.JButton btPrimeiro;
    private javax.swing.JButton btProximo;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btUltimo;
    private javax.swing.JButton btVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JComboBox<String> txtComboFornecedor;
    private javax.swing.JTextField txtCompra;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTable txtTabela;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
